{"ast":null,"code":"var _jsxFileName = \"/Users/abiolaayuba/Desktop/Takehome-Test/Frontend/meeting-attendance-ui/src/Components/TravelRegistrationForm.js\",\n  _s = $RefreshSig$();\n// TravelRegistrationForm.jsx - Form for registering travel information\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { Alert, Button, Form, Card, Modal, ListGroup } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TravelRegistrationForm = ({\n  userId,\n  userIsVip\n}) => {\n  _s();\n  var _errors$travelType, _errors$departureLoca, _errors$arrivalLocati, _errors$airline, _errors$flightNumber, _errors$departureTime, _errors$arrivalTime, _conflictData$suggest;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset,\n    setValue\n  } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [showConflictModal, setShowConflictModal] = useState(false);\n  const [conflictData, setConflictData] = useState(null);\n  const [travelTypes, setTravelTypes] = useState(['Flight', 'Train', 'Car', 'Other']);\n  const [selectedTravelType, setSelectedTravelType] = useState('Flight');\n  const onSubmit = async data => {\n    setLoading(true);\n    setMessage(null);\n    try {\n      const response = await axios.post('/api/travel', {\n        user_id: userId,\n        travel_type: data.travelType,\n        departure_location: data.departureLocation,\n        arrival_location: data.arrivalLocation,\n        departure_time: data.departureTime,\n        arrival_time: data.arrivalTime,\n        flight_number: data.flightNumber,\n        airline: data.airline,\n        confirmation_code: data.confirmationCode\n      });\n\n      // Handle success\n      setMessage({\n        type: 'success',\n        text: response.data.message || 'Travel information saved successfully!'\n      });\n\n      // If there's a non-conflict warning, show it\n      if (response.data.message && !response.data.success) {\n        setMessage({\n          type: 'warning',\n          text: response.data.message\n        });\n      }\n      reset();\n    } catch (error) {\n      console.error('Error saving travel info:', error);\n\n      // Handle VIP conflict\n      if (error.response && error.response.status === 409) {\n        setConflictData(error.response.data);\n        setShowConflictModal(true);\n      } else {\n        var _error$response, _error$response$data;\n        setMessage({\n          type: 'danger',\n          text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error saving travel information. Please try again.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTravelTypeChange = e => {\n    setSelectedTravelType(e.target.value);\n  };\n  const handleSuggestedFlightSelect = flight => {\n    setValue('airline', flight.airline);\n    setValue('flightNumber', flight.flight_number);\n    setValue('departureTime', flight.departure_time);\n    setValue('arrivalTime', flight.arrival_time);\n    setShowConflictModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      as: \"h5\",\n      children: \"Travel Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [message && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: message.type,\n        dismissible: true,\n        onClose: () => setMessage(null),\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Travel Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n            ...register('travelType', {\n              required: 'Travel method is required'\n            }),\n            onChange: handleTravelTypeChange,\n            isInvalid: !!errors.travelType,\n            children: travelTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: (_errors$travelType = errors.travelType) === null || _errors$travelType === void 0 ? void 0 : _errors$travelType.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Departure Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"City, Airport, etc.\",\n            ...register('departureLocation', {\n              required: 'Departure location is required'\n            }),\n            isInvalid: !!errors.departureLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: (_errors$departureLoca = errors.departureLocation) === null || _errors$departureLoca === void 0 ? void 0 : _errors$departureLoca.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Arrival Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"City, Airport, etc.\",\n            ...register('arrivalLocation', {\n              required: 'Arrival location is required'\n            }),\n            isInvalid: !!errors.arrivalLocation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: (_errors$arrivalLocati = errors.arrivalLocation) === null || _errors$arrivalLocati === void 0 ? void 0 : _errors$arrivalLocati.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), selectedTravelType === 'Flight' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Airline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter airline name\",\n              ...register('airline', {\n                required: 'Airline is required for flights'\n              }),\n              isInvalid: !!errors.airline\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: (_errors$airline = errors.airline) === null || _errors$airline === void 0 ? void 0 : _errors$airline.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Flight Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"e.g., UA123\",\n              ...register('flightNumber', {\n                required: 'Flight number is required'\n              }),\n              isInvalid: !!errors.flightNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: (_errors$flightNumber = errors.flightNumber) === null || _errors$flightNumber === void 0 ? void 0 : _errors$flightNumber.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), userIsVip && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"info\",\n            children: \"As a VIP attendee, your flight will be checked against other VIPs to prevent booking conflicts.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Departure Date/Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"datetime-local\",\n                ...register('departureTime', {\n                  required: 'Departure time is required'\n                }),\n                isInvalid: !!errors.departureTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: (_errors$departureTime = errors.departureTime) === null || _errors$departureTime === void 0 ? void 0 : _errors$departureTime.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-6\",\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Arrival Date/Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"datetime-local\",\n                ...register('arrivalTime', {\n                  required: 'Arrival time is required'\n                }),\n                isInvalid: !!errors.arrivalTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: (_errors$arrivalTime = errors.arrivalTime) === null || _errors$arrivalTime === void 0 ? void 0 : _errors$arrivalTime.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirmation Code (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Reservation or confirmation code\",\n            ...register('confirmationCode')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Saving...' : 'Save Travel Information'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showConflictModal,\n      onHide: () => setShowConflictModal(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"VIP Travel Conflict Detected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: conflictData === null || conflictData === void 0 ? void 0 : conflictData.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), (conflictData === null || conflictData === void 0 ? void 0 : (_conflictData$suggest = conflictData.suggested_flights) === null || _conflictData$suggest === void 0 ? void 0 : _conflictData$suggest.length) > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Suggested Alternative Flights:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: conflictData.suggested_flights.map((flight, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              action: true,\n              onClick: () => handleSuggestedFlightSelect(flight),\n              children: [flight.airline, \" \", flight.flight_number, \" - Departs: \", flight.departure_time]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setShowConflictModal(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(TravelRegistrationForm, \"21BTqYiZfEWlbUkGA5cxN+xx924=\", false, function () {\n  return [useForm];\n});\n_c = TravelRegistrationForm;\nexport default TravelRegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"TravelRegistrationForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","useForm","Alert","Button","Form","Card","Modal","ListGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","TravelRegistrationForm","userId","userIsVip","_s","_errors$travelType","_errors$departureLoca","_errors$arrivalLocati","_errors$airline","_errors$flightNumber","_errors$departureTime","_errors$arrivalTime","_conflictData$suggest","register","handleSubmit","formState","errors","reset","setValue","loading","setLoading","message","setMessage","showConflictModal","setShowConflictModal","conflictData","setConflictData","travelTypes","setTravelTypes","selectedTravelType","setSelectedTravelType","onSubmit","data","response","post","user_id","travel_type","travelType","departure_location","departureLocation","arrival_location","arrivalLocation","departure_time","departureTime","arrival_time","arrivalTime","flight_number","flightNumber","airline","confirmation_code","confirmationCode","type","text","success","error","console","status","_error$response","_error$response$data","handleTravelTypeChange","e","target","value","handleSuggestedFlightSelect","flight","className","children","Header","as","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","dismissible","onClose","Group","Label","Select","required","onChange","isInvalid","map","Control","Feedback","placeholder","disabled","show","onHide","closeButton","Title","suggested_flights","length","index","Item","action","onClick","Footer","_c","$RefreshReg$"],"sources":["/Users/abiolaayuba/Desktop/Takehome-Test/Frontend/meeting-attendance-ui/src/Components/TravelRegistrationForm.js"],"sourcesContent":["// TravelRegistrationForm.jsx - Form for registering travel information\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { Alert, Button, Form, Card, Modal, ListGroup } from 'react-bootstrap';\n\nconst TravelRegistrationForm = ({ userId, userIsVip }) => {\n  const { register, handleSubmit, formState: { errors }, reset, setValue } = useForm();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [showConflictModal, setShowConflictModal] = useState(false);\n  const [conflictData, setConflictData] = useState(null);\n  const [travelTypes, setTravelTypes] = useState(['Flight', 'Train', 'Car', 'Other']);\n  const [selectedTravelType, setSelectedTravelType] = useState('Flight');\n\n  const onSubmit = async (data) => {\n    setLoading(true);\n    setMessage(null);\n    \n    try {\n      const response = await axios.post('/api/travel', {\n        user_id: userId,\n        travel_type: data.travelType,\n        departure_location: data.departureLocation,\n        arrival_location: data.arrivalLocation,\n        departure_time: data.departureTime,\n        arrival_time: data.arrivalTime,\n        flight_number: data.flightNumber,\n        airline: data.airline,\n        confirmation_code: data.confirmationCode\n      });\n      \n      // Handle success\n      setMessage({ type: 'success', text: response.data.message || 'Travel information saved successfully!' });\n      \n      // If there's a non-conflict warning, show it\n      if (response.data.message && !response.data.success) {\n        setMessage({ type: 'warning', text: response.data.message });\n      }\n      \n      reset();\n    } catch (error) {\n      console.error('Error saving travel info:', error);\n      \n      // Handle VIP conflict\n      if (error.response && error.response.status === 409) {\n        setConflictData(error.response.data);\n        setShowConflictModal(true);\n      } else {\n        setMessage({ \n          type: 'danger', \n          text: error.response?.data?.message || 'Error saving travel information. Please try again.'\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleTravelTypeChange = (e) => {\n    setSelectedTravelType(e.target.value);\n  };\n\n  const handleSuggestedFlightSelect = (flight) => {\n    setValue('airline', flight.airline);\n    setValue('flightNumber', flight.flight_number);\n    setValue('departureTime', flight.departure_time);\n    setValue('arrivalTime', flight.arrival_time);\n    setShowConflictModal(false);\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header as=\"h5\">Travel Information</Card.Header>\n      <Card.Body>\n        {message && (\n          <Alert variant={message.type} dismissible onClose={() => setMessage(null)}>\n            {message.text}\n          </Alert>\n        )}\n        \n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Travel Method</Form.Label>\n            <Form.Select \n              {...register('travelType', { required: 'Travel method is required' })}\n              onChange={handleTravelTypeChange}\n              isInvalid={!!errors.travelType}\n            >\n              {travelTypes.map(type => (\n                <option key={type} value={type}>{type}</option>\n              ))}\n            </Form.Select>\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.travelType?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n          \n          <Form.Group className=\"mb-3\">\n            <Form.Label>Departure Location</Form.Label>\n            <Form.Control \n              type=\"text\" \n              placeholder=\"City, Airport, etc.\"\n              {...register('departureLocation', { required: 'Departure location is required' })}\n              isInvalid={!!errors.departureLocation}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.departureLocation?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n          \n          <Form.Group className=\"mb-3\">\n            <Form.Label>Arrival Location</Form.Label>\n            <Form.Control \n              type=\"text\" \n              placeholder=\"City, Airport, etc.\"\n              {...register('arrivalLocation', { required: 'Arrival location is required' })}\n              isInvalid={!!errors.arrivalLocation}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.arrivalLocation?.message}\n            </Form.Control.Feedback>\n          </Form.Group>\n          \n          {selectedTravelType === 'Flight' && (\n            <>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Airline</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"Enter airline name\"\n                  {...register('airline', { required: 'Airline is required for flights' })}\n                  isInvalid={!!errors.airline}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.airline?.message}\n                </Form.Control.Feedback>\n              </Form.Group>\n              \n              <Form.Group className=\"mb-3\">\n                <Form.Label>Flight Number</Form.Label>\n                <Form.Control \n                  type=\"text\" \n                  placeholder=\"e.g., UA123\"\n                  {...register('flightNumber', { required: 'Flight number is required' })}\n                  isInvalid={!!errors.flightNumber}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.flightNumber?.message}\n                </Form.Control.Feedback>\n              </Form.Group>\n              \n              {userIsVip && (\n                <Alert variant=\"info\">\n                  As a VIP attendee, your flight will be checked against other VIPs to prevent booking conflicts.\n                </Alert>\n              )}\n            </>\n          )}\n          \n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Departure Date/Time</Form.Label>\n                <Form.Control \n                  type=\"datetime-local\" \n                  {...register('departureTime', { required: 'Departure time is required' })}\n                  isInvalid={!!errors.departureTime}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.departureTime?.message}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </div>\n            \n            <div className=\"col-md-6\">\n              <Form.Group className=\"mb-3\">\n                <Form.Label>Arrival Date/Time</Form.Label>\n                <Form.Control \n                  type=\"datetime-local\" \n                  {...register('arrivalTime', { required: 'Arrival time is required' })}\n                  isInvalid={!!errors.arrivalTime}\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  {errors.arrivalTime?.message}\n                </Form.Control.Feedback>\n              </Form.Group>\n            </div>\n          </div>\n          \n          <Form.Group className=\"mb-3\">\n            <Form.Label>Confirmation Code (Optional)</Form.Label>\n            <Form.Control \n              type=\"text\" \n              placeholder=\"Reservation or confirmation code\"\n              {...register('confirmationCode')}\n            />\n          </Form.Group>\n          \n          <Button variant=\"primary\" type=\"submit\" disabled={loading}>\n            {loading ? 'Saving...' : 'Save Travel Information'}\n          </Button>\n        </Form>\n      </Card.Body>\n      \n      {/* VIP Conflict Modal */}\n      <Modal show={showConflictModal} onHide={() => setShowConflictModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>VIP Travel Conflict Detected</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{conflictData?.message}</p>\n          \n          {conflictData?.suggested_flights?.length > 0 && (\n            <>\n              <h6>Suggested Alternative Flights:</h6>\n              <ListGroup>\n                {conflictData.suggested_flights.map((flight, index) => (\n                  <ListGroup.Item \n                    key={index}\n                    action\n                    onClick={() => handleSuggestedFlightSelect(flight)}\n                  >\n                    {flight.airline} {flight.flight_number} - Departs: {flight.departure_time}\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowConflictModal(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default TravelRegistrationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}